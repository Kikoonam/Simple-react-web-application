{"ast":null,"code":"var _jsxFileName = \"/Users/kikoonam/Desktop/react-course/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [ModalIsOpen, setModalIsOpen] = useState(false);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteHandler,\n        children: \" Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"U7NXDnRKBvgKd9r/uoDRLJUqNVM=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/kikoonam/Desktop/react-course/src/Components/Todo.js"],"names":["useState","Todo","props","ModalIsOpen","setModalIsOpen","deleteHandler","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;;AAGF,WAASK,aAAT,GAAyB;AAC1BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACE;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAKF,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAED,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhBQJ,I;;KAAAA,I;AAiBT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction Todo(props) {\n    const [ModalIsOpen, setModalIsOpen] = useState(false);\n\n\n  function deleteHandler() {\n setModalIsOpen(true);\n  }\n\n  return (\n    <div>\n      <h2>{props.text}</h2>\n      <div>\n        <button onClick={deleteHandler}> Delete</button>\n      </div>\n    </div>\n  );\n}\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}